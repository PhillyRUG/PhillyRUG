[
  {
    "objectID": "approach/partners.html",
    "href": "approach/partners.html",
    "title": "Partners",
    "section": "",
    "text": "We work with really thoughtful partners that support open science and kinder science. We are grateful to have so many types of partners supporting Openscapes.\nPartners can invest in Openscapes in different ways. We are interested in not only leading the Champions Program for partner communities but in developing Champions Program Mentors within partner communities — our plan for scaling Openscapes is for more people to be able to lead the Champions program for their communities as part of their paid jobs."
  },
  {
    "objectID": "approach/partners.html#funding-partners",
    "href": "approach/partners.html#funding-partners",
    "title": "Partners",
    "section": "Funding Partners",
    "text": "Funding Partners\nSome of our partners provide funding. We work with partners to develop a scope of work, whether that is delivering a 2- or 4-month Champions Cohort for specific communities or open calls across communities; investing in additional curriculum for a specific Cohort; or a longer engagement through the Openscapes Framework over several years. Each investment in Openscapes also contributes to strengthening our Flywheel and the broader open science movement."
  },
  {
    "objectID": "approach/partners.html#mentor-partners",
    "href": "approach/partners.html#mentor-partners",
    "title": "Partners",
    "section": "Mentor Partners",
    "text": "Mentor Partners\nSome of our partners contribute paid time to assist Champions Cohorts, thereby developing Openscapes Mentors that will help lead future Cohorts within their own communities. Having this assistance and mentorship development be part of people’s jobs is something important to us: Mentor Partners build long-term capacity and resilience for kinder open data science within their own communities while becoming more connected with broader open science communities. They also make visible and value the labor and expertise that goes into open science, training, and community building, which is critical to promote diversity, equity, and inclusion in these spaces.\nSome of these partners contribute to Champions Program curriculum and co-lead Cohort Calls. This is an exciting work in progress with some of our four-month cohorts!"
  },
  {
    "objectID": "approach/partners.html#our-partners",
    "href": "approach/partners.html#our-partners",
    "title": "Partners",
    "section": "Our partners",
    "text": "Our partners\nPlease see openscapes.org/partners."
  },
  {
    "objectID": "approach/index.html",
    "href": "approach/index.html",
    "title": "Openscapes Approach",
    "section": "",
    "text": "We believe open practices can accelerate data-driven solutions and increase diversity, equity, inclusion, and belonging in science. These are critical to uncovering enduring science-based solutions faster, as well as for the well-being and resilience of research communities.\nWe work towards kinder science.\nWe approach open science as a spectrum, as a behavior change, and as a movement. There are many ways to practice open science and to welcome others to participate. We see data analysis and stewardship as powerful entryways for open science, and we meet scientists where they are, helping them develop new skillsets and mindsets of immediate value while empowering them as leaders. We are influenced and inspired by many leaders and community organizers, particularly in climate justice and get out the vote movements."
  },
  {
    "objectID": "approach/index.html#openscapes-mindset",
    "href": "approach/index.html#openscapes-mindset",
    "title": "Openscapes Approach",
    "section": "Openscapes Mindset",
    "text": "Openscapes Mindset\nThe Openscapes Mindset is about moving away from lonely, individual science and towards science that is more efficient, open, collaborative, inclusive and kind. We describe this for research teams in the Champions Lesson Series. This mindset also drives how we lead Openscapes as a program and an approach, as described below."
  },
  {
    "objectID": "approach/index.html#we-work-openly-and-for-future-us",
    "href": "approach/index.html#we-work-openly-and-for-future-us",
    "title": "Openscapes Approach",
    "section": "We work openly and for Future Us",
    "text": "We work openly and for Future Us\nWe share imperfect work and work in progress openly. Some examples of this are this Approach Guide, the Lesson Series, as well as our Openscapes Planning GitHub Project. We also have open learning conversations through our Community Calls.\n\n\n\nBetter science for future us"
  },
  {
    "objectID": "approach/index.html#creating-space-and-place",
    "href": "approach/index.html#creating-space-and-place",
    "title": "Openscapes Approach",
    "section": "Creating space and place",
    "text": "Creating space and place\nOne of the key things that we do is to create space for groups of researchers and mentors to talk, build community, and find common needs. This takes time and consistency, and we do this through events of varying structure. Then we help create place for groups to collaborate, which means lowering barriers and introducing technology like Google Docs, GitHub, Slack, as well as JupyterHub, and RStudio, depending on community norms.\nSpace and place help prioritize time, which is limited for everyone."
  },
  {
    "objectID": "approach/index.html#growth-mindset",
    "href": "approach/index.html#growth-mindset",
    "title": "Openscapes Approach",
    "section": "Growth Mindset",
    "text": "Growth Mindset\nWe work with a Growth Mindset, described by Dr. Carol Dweck as “the power of yet”: having an understanding that our talents and abilities can be developed through effort, good teaching, and persistence. This is opposed to a fixed mindset, where individuals believe their basic abilities, their intelligence, their talents, are just fixed traits and cannot be improved through hard work."
  },
  {
    "objectID": "approach/index.html#continual-learning-practice-feedback-and-iteration",
    "href": "approach/index.html#continual-learning-practice-feedback-and-iteration",
    "title": "Openscapes Approach",
    "section": "Continual learning, practice, feedback, and iteration",
    "text": "Continual learning, practice, feedback, and iteration\nWe are continually learning and practicing what we learn. We practice in our Champions Cohorts, Community Calls, Seaside Chats, Dry Runs, and in conversation. As we practice we iterate with that learning. We are learning more about design thinking, including prototyping and structured feedback.\nA few resources:\n\nWhat to do when your feedback doesn’t land - Lara Hogan, H/T Tara Robertson\nCritical Response Process - Liz Lerman, H/T Erin Robinson and her user-centered design class"
  },
  {
    "objectID": "approach/index.html#psychological-safety",
    "href": "approach/index.html#psychological-safety",
    "title": "Openscapes Approach",
    "section": "Psychological Safety",
    "text": "Psychological Safety\nWe practice and promote psychological safety, described by Dr. Amy Edmundson as a shared belief held by members of a team that the team is safe for interpersonal risk taking.\nPart of this practice is to start off team meetings with check-ins to see how everyone is doing that day/week, and explicitly voicing to new partners that psychological safety is foundational to our work and to speak up if something is ever not feeling right."
  },
  {
    "objectID": "approach/index.html#kinder-science",
    "href": "approach/index.html#kinder-science",
    "title": "Openscapes Approach",
    "section": "Kinder Science",
    "text": "Kinder Science\nWe work not only towards open science, but kinder science, and approach this in our work through empathy and listening, and also onboarding folks to the tooling we use to reduce friction as we collaborate.\n\nOpen science is not just about improving the way we share data and methods; it is also about improving the way we think, work and interact with each other. It’s about technology enabling social infrastructure that can promote inclusivity to create kinder science. - Lowndes 2019 Open Software Means Kinder Science"
  },
  {
    "objectID": "approach/index.html#we-practice-what-we-teach",
    "href": "approach/index.html#we-practice-what-we-teach",
    "title": "Openscapes Approach",
    "section": "We practice what we teach",
    "text": "We practice what we teach\nWe use the same tooling to lead Openscapes that are powerful for research: based in R (RMarkdown, Quarto), GitHub, Google Drive, and Twitter. This is because as researchers these tools have transformed science collaboration and communication and we now can’t imagine science or our regular workflows without them! Using them daily also keeps us current with modern tooling and provides endless opportunities for learning."
  },
  {
    "objectID": "approach/qual-assessment.html",
    "href": "approach/qual-assessment.html",
    "title": "Philadelphia R User Group",
    "section": "",
    "text": "Field notes - Quick reflections after each cohort for each mentors - then we code this private reflections doc in addition to our"
  },
  {
    "objectID": "approach/calendar.html",
    "href": "approach/calendar.html",
    "title": "Calendar",
    "section": "",
    "text": "Our annual calendar shows that we lead Champions Cohorts in two periods per year, including an open call in the spring. This gives us time to annually review lessons and programming and take some time off in the summer."
  },
  {
    "objectID": "approach/code-of-conduct.html",
    "href": "approach/code-of-conduct.html",
    "title": "Code of Conduct",
    "section": "",
    "text": "Our community is the most valuable thing about Openscapes.\nSupporting a safe, inclusive, welcoming, and harassment-free experience for everyone in our community is paramount, as is strengthening connections with other communities that have influenced our work. Our Code of Conduct is heavily drawn from rOpenSci and Mozilla, who we greatly appreciate for their leadership in this area.\nOpenscapes is committed to providing a safe, inclusive, welcoming, and harassment-free experience for everyone.\nDiversity is our strength, we try to cultivate a tone where everyone in the community, no matter their backgrounds and accomplishments, comes with a mind open to learning from, with, and for each other. In this mindset, questions are always welcome and appropriate because they don’t expose the lack of knowledge of the asker. Rather, questions expose opportunities for clarification for the original communicator, and for further opening up the conversation to include different perspectives and learning styles.\nIn our community we encourage listening and empathy in all of our interactions. This means:\nBe Respectful\nValue each other’s ideas, styles and viewpoints. We may not always agree, but disagreement is no excuse for poor manners. Be open to different possibilities and to being wrong. Be respectful in all interactions and communications, especially when debating the merits of different options. Be aware of your impact and how intense interactions may be affecting people. Be direct, constructive and positive. Take responsibility for your impact and your mistakes – if someone says they have been harmed through your words or actions, listen carefully, apologize sincerely, and correct the behavior going forward.\nBe Direct but Professional\nWe are likely to have some discussions about if and when criticism is respectful and when it’s not. We must be able to speak directly when we disagree and when we think we need to improve. We cannot withhold hard truths. Doing so respectfully is hard, doing so when others don’t seem to be listening is harder, and hearing such comments when one is the recipient can be even harder still. We need to be honest and direct, as well as respectful.\nBe Inclusive\nSeek diverse perspectives. Diversity of views and of people on teams powers innovation, even if it is not always comfortable. Encourage all voices. Help new perspectives be heard and listen actively. If you find yourself dominating a discussion, it is especially important to step back and encourage other voices to join in. Be aware of how much time is taken up by dominant members of the group. Provide alternative ways to contribute or participate when possible.\nBe inclusive of everyone in an interaction, respecting and facilitating people’s participation whether they are:\n\nRemote (on video or phone)\nNot native language speakers\nComing from a different culture, perspective, or background\nUsing pronouns other than “he” or “she”\nLiving in a different time zone\nFacing other challenges to participate\n\nIf you find yourself dominating a discussion, it is especially important to step back, encourage other voices to join in, and listen actively to them.\nUnderstand Different Perspectives\nOur goal should not be to “win” every disagreement or argument. A more productive goal is to be open to ideas that make our own ideas better. Strive to be an example for inclusive thinking. “Winning” is when different perspectives make our work richer and stronger.\nAppreciate and Accommodate Our Similarities and Differences\nWe come from many cultures and backgrounds. Cultural differences can encompass everything from official religious observances to personal habits to clothing. Be respectful of people with different cultural practices, attitudes and beliefs. Work to eliminate your own biases, prejudices and discriminatory practices. Think of others’ perspectives, contributions, and needs from their point of view. Use preferred titles (including pronouns) and the appropriate tone of voice. Respect people’s right to privacy and confidentiality. Be open to learning from and educating others as well as educating yourself; it is unrealistic to expect everyone to know the cultural practices of every ethnic and cultural group, but everyone needs to recognize one’s native culture is only part of positive interactions.\nLead by Example\nBy matching your actions with your words, you become a person others want to follow. Your actions influence others to behave and respond in ways that are valuable and appropriate for our organizational outcomes. Design your community and your work for inclusion. Hold yourself and others accountable for inclusive behaviors. Make decisions based on the highest good for our community.\n\n\nSummary\nBe respectful, honest, inclusive, accommodating, appreciative, and open to learning from everyone else.\nDo not attack, demean, disrupt, harass, or threaten others or encourage such behavior.\nThis Code of Conduct applies to all people participating in the Openscapes community, including Openscapes staff and leadership. It applies to all modes of interaction online including GitHub project repositories, remote calls, and in person at Openscapes -hosted events.\n\n\nReporting Guidelines\nIf you experience or witness unacceptable behavior, or have any other concerns, please report it by contacting the organiser Julia Lowndes at openscapes @ nceas.ucsb.edu or independent community member Allison Horst at ahorst @ ucsb.edu with a description of what has occurred and any supporting information that would be helpful. After receiving a concise description of your situation, Julia or Allison will review the report and determine next steps. We will respect confidentiality requests for the purpose of protecting victims of abuse.\n\nThe Openscapes Code of Conduct is heavily drawn from rOpenSci and Mozilla, who we greatly appreciate for their leadership in this area (see Mozilla’s inclusion repo. Additional resources influencing this document include RStudio, Open Post Academics, and the groups described in open software means kinder science. Please also see the value and ethics statements from Ben Marwick’s lab as well as other inspiring examples from EpiEllie’s twitter thread and the coop at Fred Hutch."
  },
  {
    "objectID": "approach/onboarding.html",
    "href": "approach/onboarding.html",
    "title": "Onboarding",
    "section": "",
    "text": "As we start collaborating with folks to deliver the Champions Program we will be documenting the onboarding process here. We are onboarding folks to collaborate in different capacities — i.e. as mentors, assistants, evaluators, lesson contributors, guest teachers — so we will be trying to be as streamlined as possible with the most relevant information and skill-building to meet specific needs and timeframes. We are excited for more communities to be able to use the Openscapes approach!"
  },
  {
    "objectID": "approach/onboarding.html#first-introductions",
    "href": "approach/onboarding.html#first-introductions",
    "title": "Onboarding",
    "section": "First Introductions",
    "text": "First Introductions\nTo first get a sense of Openscapes, we recommend looking through openscapes.org, including some of the slides listed on the approach and champions pages. This will help give you an overview of Openscapes as a whole and of the Champions Program."
  },
  {
    "objectID": "approach/onboarding.html#experience-a-cohort-call",
    "href": "approach/onboarding.html#experience-a-cohort-call",
    "title": "Onboarding",
    "section": "Experience a Cohort Call",
    "text": "Experience a Cohort Call\nThe next step is to experience the Cohort Calls to see what they are really like. Hopefully this can happen live, but if not we’ll give you access to an example folder of Openscapes_CohortCalls. The folder has four 1.5-hour videos and associated agendas, as well as the drafted blog post. We suggest you:\n\nRead the blog post to get an overview\nWatch a CallRecording while at the same time reading through the accompanying CallAgenda (we’ll let you know which one we recommend). We use the Agendas for live note-taking but don’t screenshare it; you’ll hear us orient you to page numbers and sections as we go\nGo through a few examples in the PathwaysShare folder to get a sense of what Champions share on the last call"
  },
  {
    "objectID": "approach/onboarding.html#seaside-chats-co-working",
    "href": "approach/onboarding.html#seaside-chats-co-working",
    "title": "Onboarding",
    "section": "Seaside Chats / Co-working",
    "text": "Seaside Chats / Co-working\nWe’ll then meet for a Seaside Chat to get oriented and establish a workplan. We expect this to look like the following for different collaborators. These are outlines of a few first few meetings.\n\nCohort Mentors/Assistants\n\nGetting oriented: discuss Cohort Calls, pre-Cohort engagement & setup, tooling\n\ncohort dates/calendar\nadd to Slack\n\nGitHub Clinic: using GitHub to collaborate and publish from the web\nRMarkdown/Quarto Clinic: how to contribute to the approach-guide and events site\nCo-working: from here, we’ll likely co-work to develop event pages, Call Agendas and Digests, and use GitHub Issues/Projects\n\n\n\nLesson Contributors\n\nGetting oriented: discuss Cohort Calls, lesson series, brainstorm lesson plan\n\ncohort dates/calendar\nadd to Slack\n\nLesson workplan: solidify lesson plan, establish workplan/co-working\n\nExample: SASI Cohort Lesson Plan\n\nCo-working: from here, we’ll likely co-work to develop Call Agendas and use GitHub Issues/Projects"
  },
  {
    "objectID": "approach/onboarding.html#cohort-planning-using-github-issues",
    "href": "approach/onboarding.html#cohort-planning-using-github-issues",
    "title": "Onboarding",
    "section": "Cohort Planning using GitHub Issues",
    "text": "Cohort Planning using GitHub Issues\nAs we get further along with planning the Cohort, we’ll be using GitHub Issues to coordinate together. Depending on the Cohort, we’ll use the cohort-planning repo, or potentially the Cohort repo itself. We often pin “quicklinks” so that we can easily navigate to the docs we need when we need them when leading Cohort Calls!\n\n\n\n\n\nThe cohort-planning repository is one of the repositories included in the Openscapes Organizational-level Projects board that helps us organize our “todo” items. We are getting into the rhythm of using Project Boards and can set up additional ones too."
  },
  {
    "objectID": "approach/seaside-chats.html",
    "href": "approach/seaside-chats.html",
    "title": "Seaside Chats, etc.",
    "section": "",
    "text": "We work together with varied technology and facilitations to provide structure. Here are the main ways we work together."
  },
  {
    "objectID": "approach/seaside-chats.html#seaside-chats",
    "href": "approach/seaside-chats.html#seaside-chats",
    "title": "Seaside Chats, etc.",
    "section": "Seaside Chats",
    "text": "Seaside Chats\nWe build shared skillsets in part through Seaside Chats. These are regular meetings where we skillshare and learn together. This will likely be the avenue for onboarding. That will be a place where you can get familiar with any of the tooling and practices that we use. And, you can teach the rest of the team what you know so that we can all work better together. These often have an agenda in advance."
  },
  {
    "objectID": "approach/seaside-chats.html#co-working",
    "href": "approach/seaside-chats.html#co-working",
    "title": "Seaside Chats, etc.",
    "section": "Co-working",
    "text": "Co-working\nWe also have co-working sessions where we work at the same time together. Sometimes, this means quiet work with check-ins to break up focused work and get feedback, and sometimes this involves screensharing to problem solve. These most often have no agenda."
  },
  {
    "objectID": "approach/seaside-chats.html#hackathons",
    "href": "approach/seaside-chats.html#hackathons",
    "title": "Seaside Chats, etc.",
    "section": "Hackathons",
    "text": "Hackathons\nWe have hackathons to tackle specific tasks together. We use this word to mean working on something together in real time that benefits the project or team. These are often a good way to get early momentum on a project or to re-invigorate an existing project. We kick-started this guide during a 2-person hackathon! We made the github repo, quarto site architecture (section folders, chapter pages, and markdown headers) to outline the guide and built and iterated as we went."
  },
  {
    "objectID": "approach/seaside-chats.html#community-calls",
    "href": "approach/seaside-chats.html#community-calls",
    "title": "Seaside Chats, etc.",
    "section": "Community Calls",
    "text": "Community Calls\nWe host ~4 Community Calls per year where we discuss and explore topics relevant to Openscapes. See past and upcoming events that Openscapes has either hosted or joined.\nCommunity Calls are an hour long and generally follow this structure:\n\nbegin 5 mins prior: rotating welcome slides and pump-up music selected by the guest\n5 mins: welcome, code of conduct, plan for the call, introduce guest\n25 mins: prepared conversation with guest\n10 mins: moderated questions/discussion from the chat\n10 mins: open discussion\nfinish 5 mins before a full hour"
  },
  {
    "objectID": "approach/seaside-chats.html#cohort-calls",
    "href": "approach/seaside-chats.html#cohort-calls",
    "title": "Seaside Chats, etc.",
    "section": "Cohort Calls",
    "text": "Cohort Calls\nCohort Calls are the core of the Champions Program and the NASA Openscapes Framework. They are described more in the Champions Lesson Series. They are a big part of how we work as we work with research and mentors groups.\nOne note: we avoid having folks “shadow”on Cohort Calls, since we are building trust and so avoid have folks “drop in”. Instead, we can plan in advance to have them assist and introduce themselves if they are joining a Cohort Calls and learning by doing."
  },
  {
    "objectID": "approach/seaside-chats.html#social-hours",
    "href": "approach/seaside-chats.html#social-hours",
    "title": "Seaside Chats, etc.",
    "section": "Social Hours",
    "text": "Social Hours\nWe host monthly virtual social hours May through August for people to (re)connect informally with other Champions, Mentors, or the Openscapes team (anyone in our Slack). Folks might share their wins, challenges, tips, and generally find commonalities. As we experiment, these may include ice breakers or breakout rooms (example).\nTo keep these truly low-barrier, no RVSP or preparation are required. The day and time may vary each month.\n\n\n\n\n\n\nExample Slack text to announce next Social Hour\n\n\n\n\n\n@channel Y’all are invited to our first Openscapes Social Hour!\nTime: Monday, May 16th, 1:00 - 1:50pm PT (UTC -7)\nWhere: Zoom link\nNo RSVP or preparation needed 😅 Bring snacks / mocktails / cocktails!\nWe wanted to create a way for people to (re)connect informally with other Champions, Mentors, the Openscapes team, anyone in this Slack. I know many of you are keen to hear what others have been up to so come hang out! I’ll facilitate so I promise it won’t be awkward 😉 (This msg is pinned to this channel so you can find the details any time)"
  },
  {
    "objectID": "approach/seaside-chats.html#stickers",
    "href": "approach/seaside-chats.html#stickers",
    "title": "Seaside Chats, etc.",
    "section": "Stickers",
    "text": "Stickers\nWe have physical stickers we share with our community. These hex stickers are something from the R (#rstats) community that we put on laptops, waterbottles, etc.\nSo far we’ve ordered them from Sticker Mule, using dimensions following RStudio:\n\nDie cut stickers\nSize: 1.74” x 2”"
  },
  {
    "objectID": "approach/seaside-chats.html#resources",
    "href": "approach/seaside-chats.html#resources",
    "title": "Seaside Chats, etc.",
    "section": "Resources",
    "text": "Resources\n\nGalaxyKate’s 4-Channel participation model - supporting remote learners"
  },
  {
    "objectID": "approach/tooling.html",
    "href": "approach/tooling.html",
    "title": "Tooling",
    "section": "",
    "text": "We also explore and learn new tools but always always with an eye towards interoperability with our current tooling, and with an understanding of how the open science community and environmental/Earth science communities are working.\nBelow are the tools that we use, why we use them, and set up instructions. (Herre are some Macbook setup notes).\n\nGoogle Drive\n\nDocs\nSheets\n\n\n\nGitHub\n\nversion control for everything that’s not Google Drive\ncoordination with Issues\npublishing all our R-based web communications (see next)\ncomms through website\n\n\n\nR/RStudio\n\nall websites and books\ndata analysis (R: tidyverse, RMarkdown)\ncommunications and technical writing (RMarkdown, bookdown, blogdown, Quarto)\nRStudio and GitHub setup instructions\n\n\n\nGoogle Calendar\n\n\nSlack\n\nhttps://slack.com/downloads\n\n\n\nZoom\n\nhttps://zoom.com/downloads\n\n\n\nZotero\n\nhttps://www.zotero.org/\nLogin from browser\nDownload desktop app and Zotero Connector to Firefox\n\nIn our Openscapes group library, we have resources not limited to academic articles, but also youtube videos, blogs, teaching resources, and more.\n\n\nORCID/Rescognito\nupcoming"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Philadelphia R User Group",
    "section": "",
    "text": "to the Philadelphia R User Group’s website! This page is still under construction, but we plan to host videos and recap our events here."
  },
  {
    "objectID": "content/tt20220809.html",
    "href": "content/tt20220809.html",
    "title": "#TidyTuesday: Ferris Wheels",
    "section": "",
    "text": "We’ll start by reading in the data:\n\n#|echo: true\n#|include: true\n#|message: false\n\nwheels <- read.csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-08-09/wheels.csv')\n\nskimr::skim(wheels)\n\n\nData summary\n\n\nName\nwheels\n\n\nNumber of rows\n73\n\n\nNumber of columns\n22\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n13\n\n\nnumeric\n9\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nname\n0\n1.00\n5\n31\n0\n73\n0\n\n\nopened\n4\n0.95\n10\n10\n0\n51\n0\n\n\nclosed\n71\n0.03\n10\n10\n0\n2\n0\n\n\ncountry\n0\n1.00\n2\n12\n0\n26\n0\n\n\nlocation\n2\n0.97\n5\n42\n0\n69\n0\n\n\nclimate_controlled\n21\n0.71\n2\n3\n0\n3\n0\n\n\nconstruction_cost\n0\n1.00\n7\n43\n0\n28\n0\n\n\nstatus\n5\n0.93\n4\n18\n0\n10\n0\n\n\ndesign_manufacturer\n33\n0.55\n5\n53\n0\n36\n0\n\n\ntype\n22\n0.70\n5\n13\n0\n6\n0\n\n\nvip_area\n53\n0.27\n2\n3\n0\n2\n0\n\n\nticket_cost_to_ride\n29\n0.60\n1\n48\n0\n39\n0\n\n\nofficial_website\n25\n0.66\n22\n78\n0\n48\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nX\n0\n1.00\n37.00\n21.22\n1\n19.00\n37.0\n55.00\n73\n▇▇▇▇▇\n\n\nheight\n1\n0.99\n304.24\n141.03\n130\n197.00\n271.5\n378.75\n728\n▇▅▃▁▁\n\n\ndiameter\n35\n0.52\n286.76\n146.08\n70\n165.41\n271.0\n361.00\n700\n▇▇▇▂▂\n\n\nnumber_of_cabins\n11\n0.85\n41.94\n11.51\n15\n36.00\n42.0\n48.00\n68\n▂▇▇▅▃\n\n\npassengers_per_cabin\n18\n0.75\n11.51\n10.43\n2\n6.00\n8.0\n8.00\n40\n▇▁▁▁▁\n\n\nseating_capacity\n18\n0.75\n456.36\n371.64\n64\n258.00\n336.0\n426.00\n1920\n▇▂▁▁▁\n\n\nhourly_capacity\n24\n0.67\n1571.18\n957.59\n349\n960.00\n1440.0\n1680.00\n5760\n▇▇▁▁▁\n\n\nride_duration_minutes\n12\n0.84\n17.73\n8.05\n6\n12.00\n15.0\n20.00\n40\n▇▇▅▃▁\n\n\nturns\n53\n0.27\n2.00\n1.21\n1\n1.00\n1.0\n3.00\n4\n▇▁▁▃▂\n\n\n\n\n\nHere’s a snip from the Tidy Tuesday Github page outlining the variables included in the dataset:\n\nIt could be fun to try to look at the factors determining ticket_cost_to_ride – let’s give it a shot. We’ll start with a few simple graphs.\n\nggplot(wheels,aes(x=construction_cost,y=ticket_cost_to_ride,color=climate_controlled)) + geom_point() + stat_smooth(method='lm')\n\n`geom_smooth()` using formula 'y ~ x'\n\n\n\n\n\nOof. Looks like we’ll need to clean up ticket_cost_to_ride and construction_cost to make them useful. We’ll start with ticket_cost_to_ride. It looks like there are semicolons separating what we’ll call cost_types and hyphens separating the ticket_cost_to_ride from the cost_type - let’s break these out.\n\nwheels |> \n  filter(!is.na(ticket_cost_to_ride)) |> \n  select(ticket_cost_to_ride)\n\n                                ticket_cost_to_ride\n1                                               3.5\n2                      Adults – 13; VIP – 110 & 140\n3                                              7.87\n4                                              8.15\n5                        Included in Park Admission\n6                                              6.93\n7                                              8.87\n8                                              6.93\n9                    Adults – 8.17; Children – 4.08\n10                   Adults – 4.94; Children – 2.64\n11               Adults – 13; Children -9; VIP – 50\n12                                    Estimated $38\n13                    Adults – 3.26 Children – 1.63\n14                                             4.94\n15                                               25\n16                                                5\n17                                               28\n18                        Regular – 3.55 VIP – 5.92\n19                  Weekdays – 5.01 Weekends – 6.68\n20                 Adults – 13 Children -9 VIP – 50\n21                                                6\n22                                             ~$35\n23 $10.99+tax for Adults and $6.99+tax for Children\n24        Adults – 7.79 Children – 5.19 VIP – 58.41\n25                                              TBA\n26                                                5\n27                  Adults – 12.92; Children – 6.46\n28             Adults – 13 Children – 8.50 VIP – 50\n29                                              2.6\n30                                             4.97\n31                  Adults – 26.05 Children – 16.58\n32                                             4.97\n33                      Adult – $13.50+tax ($14.45)\n34                                             8.16\n35                                         10 to 15\n36                                            17.94\n37                                              3.5\n38                                             6.97\n39                                                7\n40                  Adults – 27.99 Children – 16.41\n41                                            11.41\n42              Adults – 15 Children – 10 VIP – 119\n43                   Adults – 11.69 Children – 5.19\n44                                                7\n\n\nSo from a quick review - we’ve got a little over half of the data with a non-null ticket_cost_to_ride and the field requires substantial cleaning. In the interest of time, let’s look more closely at the construction_cost field as it is a bit cleaner.\n\nwheels |> \n  count(construction_cost!='Unknown')\n\n  construction_cost != \"Unknown\"  n\n1                          FALSE 40\n2                           TRUE 33\n\n\nHere we’re looking at a situation where a little under half of our data is usable (instead of NA’s, we now have ‘unknown’s. Let’s build up a model of construction costs and see what it’d imply for this ’unknown’ subset.\n\nwheels |> \n  filter(construction_cost!='Unknown') |> \n  select(construction_cost) |> \n  mutate(cons_cost_str_len = stringr::str_length(construction_cost)) |>\n  arrange(desc(cons_cost_str_len))\n\n                             construction_cost cons_cost_str_len\n1  Estimated Between $650 and $750 million USD                43\n2                           $13.18 million USD                18\n3                           $45.67 million USD                18\n4                            $9.89 million USD                17\n5                            $2.42 million USD                17\n6                            $6.68 million USD                17\n7                             $290 million USD                16\n8                             $6.8 million USD                16\n9                             $250 million USD                16\n10                            $113 million USD                16\n11                            $3.2 million USD                16\n12                            $580 million USD                16\n13                            $1.5 million USD                16\n14                            $1.2 million USD                16\n15                            $180 million USD                16\n16                            $1.5 million USD                16\n17                            $300 million USD                16\n18                            $7.3 million USD                16\n19                            $2.2 million USD                16\n20                            $337 million USD                16\n21                            $100 million USD                16\n22                             $13 million USD                15\n23                             $90 million USD                15\n24                             $10 million USD                15\n25                             $12 million USD                15\n26                             $10 million USD                15\n27                             $90 million USD                15\n28                             $20 million USD                15\n29                             $20 million USD                15\n30                             $12 million USD                15\n31                             $10 million USD                15\n32                              $6 million USD                14\n33                              $9 million USD                14\n\n\nOf the 33 usable records, one is given a range. We’ll manually recode that one to a midpoint value (eg, $700M). All values are given in millions of USD, so to make our lives easier we’ll just separate out the numeric bit and multiply by 1e6.\n\nwheels_cons <- wheels |> \n  filter(construction_cost!='Unknown') |> \n  mutate(cons_cost_numeric=\n           ifelse(\n             stringr::str_starts(construction_cost,\n                                 'Estimated Between'),\n             700,\n             NA)) |> \n  tidyr::separate(construction_cost,\n                  into=c('cons_dollars',\n                         'cons_multiplier',\n                         'cons_units'),sep=' ') |> \n  mutate(cons_cost_numeric=\n           ifelse(\n             is.na(cons_cost_numeric),\n             as.numeric(gsub('\\\\$','',cons_dollars)),\n             cons_cost_numeric)) |> \n  select(-one_of(c('cons_dollars','cons_multiplier','cons_units')))\n\nWarning: Expected 3 pieces. Additional pieces discarded in 1 rows [9].\n\n\nWarning in ifelse(is.na(cons_cost_numeric), as.numeric(gsub(\"\\\\$\", \"\",\ncons_dollars)), : NAs introduced by coercion\n\nwheels_cons <- wheels_cons |> \n  mutate(log_cons_cost_numeric = log(cons_cost_numeric))\nggplot(wheels_cons,aes(x=diameter,y=cons_cost_numeric)) + geom_point()\n\nWarning: Removed 19 rows containing missing values (geom_point).\n\n\n\n\n\nWow we have a lot of missing data! Of our 33 available ferris wheels, we see only 14 have an associated diameter. We’ll use recipes to impute some of our continuous variables, and use step_novel and step_unknown to handle missing categorical variables.\nLet’s stick with a simple linear regression for now.\n\nlinear_model <- linear_reg()  |>  set_engine(\"lm\")\n\nwheels_recipe <- \n  recipe(log_cons_cost_numeric ~ height + \n           diameter + \n           seating_capacity + \n           ride_duration_minutes + \n           climate_controlled + \n           vip_area,\n         data = wheels_cons) |> \n  step_novel(all_nominal_predictors()) |> \n  step_unknown(all_nominal_predictors()) |> \n  step_dummy(all_nominal_predictors()) |> \n  step_dummy(all_nominal_predictors()) |> \n  step_impute_mean(all_numeric_predictors())\n\nlm_wflow <- \n  workflow() |>  \n  add_model(linear_model) |> \n  add_recipe(wheels_recipe)\n\nwheels_cons_baked <- wheels_recipe |> \n  prep() |> \n  bake(new_data=NULL)\n\n\nlm_fit <- fit(lm_wflow, wheels_cons)\n\nwheels_cons_res <- predict(lm_fit, \n                           new_data = wheels_cons |> \n                             select(-log_cons_cost_numeric))\n\nWarning in predict.lm(object = object$fit, newdata = new_data, type =\n\"response\"): prediction from a rank-deficient fit may be misleading\n\nwheels_cons <- wheels_cons |> \n  bind_cols(wheels_cons_res) |> \n  mutate(pred_cons_cost = exp(.pred))\n\nggplot(wheels_cons,aes(x=cons_cost_numeric,y=pred_cons_cost)) + \n  geom_point() + \n   coord_trans(\"log2\")\n\n\n\n\nThis looks … pretty bad. Let’s take a quick look at some model evaluation metrics and call it a night.\n\nreg_metrics <- metric_set(rmse, rsq, mae)\nreg_metrics(wheels_cons, \n            truth = cons_cost_numeric, \n            estimate = pred_cons_cost)\n\n# A tibble: 3 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 rmse    standard     104.   \n2 rsq     standard       0.737\n3 mae     standard      45.7  \n\n\nYikes - our RMSE and MAE imply we’re off on average by between $45 and $104 million dollars! We have a pretty high R-squared, but there are about a million reasons why this is a bad metric (and why we might want to trust our model less if our R-squared is high … likely some confounders and excluded variables operating through the ones we’re including).\nOk - wrapping up, last last thing to do is to take a look at the stuff we had to exclude because it was missing the construction_cost variable. How much do we think these guys would cost to build? We’ll just throw this into a graph using height as the x-axis variable because it’s the only numeric variable besides the index with less than 10 missings.\n\nwheels_missing <- \n  wheels |> \n  filter(construction_cost=='Unknown') |> \n  mutate(log_cons_cost_numeric=0, \n         status='Forecasted') \n\nwheels_cons_pred <- predict(lm_fit, \n                           new_data = wheels_missing |> \n                             select(-log_cons_cost_numeric))\n\nWarning in predict.lm(object = object$fit, newdata = new_data, type =\n\"response\"): prediction from a rank-deficient fit may be misleading\n\nwheels_missing <- wheels_missing |>   \n  bind_cols(wheels_cons_pred) |> \n  mutate(pred_cons_cost = exp(.pred)) |> \n  # for viz purposes, set the 'cost' to the prediction\n  mutate(cons_cost_numeric = pred_cons_cost)\n  \nggplot(bind_rows(wheels_missing,\n                 wheels_cons |> mutate(status='Actual')),\n       aes(x=height,y=cons_cost_numeric,color=status)) + geom_point()\n\nWarning: Removed 1 rows containing missing values (geom_point)."
  },
  {
    "objectID": "content/sprt_em.html",
    "href": "content/sprt_em.html",
    "title": "JC: Probabilistic Weather Forecasting Supplemental - EM",
    "section": "",
    "text": "2*2\n\n[1] 4"
  },
  {
    "objectID": "content/discord.html",
    "href": "content/discord.html",
    "title": "Philadelphia R User Group",
    "section": "",
    "text": "Join the conversation on our Discord Server!"
  },
  {
    "objectID": "tt_20221025.html",
    "href": "tt_20221025.html",
    "title": "Tidy Tuesday - GBBO",
    "section": "",
    "text": "plot_off1 <- bakeoff::ratings %>% \n  dplyr::mutate(ep_id = row_number()) %>%\n  dplyr::select(ep_id, viewers_7day, series, episode)\n\n# create coordinates for labels\nseries_labels <- plot_off1 %>% \n  dplyr::group_by(series) %>% \n  dplyr::summarize(y_position = median(viewers_7day) + 1,\n            x_position = mean(ep_id))\n# make the plot\nplot_off1 |> \n  ggplot(aes(x = ep_id, y = viewers_7day, fill = factor(series))) +\n    geom_col(alpha = .9) +\n    ggtitle(\"Series 8 was a Big Setback in Viewers\",\n            subtitle= \"7-Day Viewers across All Series/Episodes\") +\n    geom_text(data = series_labels, aes(label = series,\n                                        x = x_position, \n                                        y = y_position)) +\n    theme(axis.text.x = element_blank(),\n          axis.ticks.x = element_blank(),\n          axis.title.x = element_blank(),\n          panel.grid.major.x = element_blank(),\n          panel.grid.minor.x = element_blank()) + \n    scale_fill_bakeoff(guide = \"none\")\n\n\n\n\n\nratings <- bakeoff::ratings\ngrouped_ratings <- group_by(ratings,series)\nsummarized_ratings <- summarize(grouped_ratings, \n                                avg_viewers_7day=mean(viewers_7day))\nfiltered_summarized_ratings <- filter(summarized_ratings,\n                                      series >= 5 & series <= 10)\n\nfiltered_summarized_ratings\n\n# A tibble: 6 × 2\n  series avg_viewers_7day\n   <dbl>            <dbl>\n1      5            10.0 \n2      6            12.3 \n3      7            13.6 \n4      8             9.02\n5      9             9.30\n6     10             9.24\n\ntidy_filtered_summarized_ratings <- \n  ratings |>  \n  group_by(series) |> \n  summarize(avg_viewers_7day=mean(viewers_7day)) |> \n  filter(series >= 5 & series <= 10)\n  \ntidy_filtered_summarized_ratings == filtered_summarized_ratings\n\n     series avg_viewers_7day\n[1,]   TRUE             TRUE\n[2,]   TRUE             TRUE\n[3,]   TRUE             TRUE\n[4,]   TRUE             TRUE\n[5,]   TRUE             TRUE\n[6,]   TRUE             TRUE\n\n\n\nbakeoff::ratings |> group_by(series) |> \n  summarize(mean_7day = mean(viewers_7day),\n            mean_28day=mean(viewers_28day,na.rm=T),\n            sum_7day=sum(viewers_7day)) |> gt::gt() |> \n    gt::tab_header(\n        title = \"Our Tidy Tuesday Table\",\n        subtitle = \"GBBO Average Viewership by Season/Series\"\n    )\n\n\n\n\n\n  \n    \n      Our Tidy Tuesday Table\n    \n    \n      GBBO Average Viewership by Season/Series\n    \n  \n  \n    \n      series\n      mean_7day\n      mean_28day\n      sum_7day\n    \n  \n  \n    1\n2.77000\n3.00000\n16.620\n    2\n3.95125\n1.25000\n31.610\n    3\n5.00100\n1.00000\n50.010\n    4\n7.35400\n1.00000\n73.540\n    5\n10.03930\n1.10000\n100.393\n    6\n12.31100\n12.55556\n123.110\n    7\n13.56300\n13.84500\n135.630\n    8\n9.01700\n9.28700\n90.170\n    9\n9.29800\n9.66000\n92.980\n    10\n9.24200\n9.63500\n92.420"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "tt/tt20220809.html",
    "href": "tt/tt20220809.html",
    "title": "#TidyTuesday: Ferris Wheels",
    "section": "",
    "text": "We’ll start by reading in the data:\n\n#|echo: true\n#|include: true\n#|message: false\n\nwheels <- read.csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-08-09/wheels.csv')\n\nskimr::skim(wheels)\n\n\nData summary\n\n\nName\nwheels\n\n\nNumber of rows\n73\n\n\nNumber of columns\n22\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n13\n\n\nnumeric\n9\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nname\n0\n1.00\n5\n31\n0\n73\n0\n\n\nopened\n4\n0.95\n10\n10\n0\n51\n0\n\n\nclosed\n71\n0.03\n10\n10\n0\n2\n0\n\n\ncountry\n0\n1.00\n2\n12\n0\n26\n0\n\n\nlocation\n2\n0.97\n5\n42\n0\n69\n0\n\n\nclimate_controlled\n21\n0.71\n2\n3\n0\n3\n0\n\n\nconstruction_cost\n0\n1.00\n7\n43\n0\n28\n0\n\n\nstatus\n5\n0.93\n4\n18\n0\n10\n0\n\n\ndesign_manufacturer\n33\n0.55\n5\n53\n0\n36\n0\n\n\ntype\n22\n0.70\n5\n13\n0\n6\n0\n\n\nvip_area\n53\n0.27\n2\n3\n0\n2\n0\n\n\nticket_cost_to_ride\n29\n0.60\n1\n48\n0\n39\n0\n\n\nofficial_website\n25\n0.66\n22\n78\n0\n48\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nX\n0\n1.00\n37.00\n21.22\n1\n19.00\n37.0\n55.00\n73\n▇▇▇▇▇\n\n\nheight\n1\n0.99\n304.24\n141.03\n130\n197.00\n271.5\n378.75\n728\n▇▅▃▁▁\n\n\ndiameter\n35\n0.52\n286.76\n146.08\n70\n165.41\n271.0\n361.00\n700\n▇▇▇▂▂\n\n\nnumber_of_cabins\n11\n0.85\n41.94\n11.51\n15\n36.00\n42.0\n48.00\n68\n▂▇▇▅▃\n\n\npassengers_per_cabin\n18\n0.75\n11.51\n10.43\n2\n6.00\n8.0\n8.00\n40\n▇▁▁▁▁\n\n\nseating_capacity\n18\n0.75\n456.36\n371.64\n64\n258.00\n336.0\n426.00\n1920\n▇▂▁▁▁\n\n\nhourly_capacity\n24\n0.67\n1571.18\n957.59\n349\n960.00\n1440.0\n1680.00\n5760\n▇▇▁▁▁\n\n\nride_duration_minutes\n12\n0.84\n17.73\n8.05\n6\n12.00\n15.0\n20.00\n40\n▇▇▅▃▁\n\n\nturns\n53\n0.27\n2.00\n1.21\n1\n1.00\n1.0\n3.00\n4\n▇▁▁▃▂\n\n\n\n\n\nHere’s a snip from the Tidy Tuesday Github page outlining the variables included in the dataset:\n\nIt could be fun to try to look at the factors determining ticket_cost_to_ride – let’s give it a shot. We’ll start with a few simple graphs.\n\nggplot(wheels,aes(x=construction_cost,y=ticket_cost_to_ride,color=climate_controlled)) + geom_point() + stat_smooth(method='lm')\n\n`geom_smooth()` using formula 'y ~ x'\n\n\n\n\n\nOof. Looks like we’ll need to clean up ticket_cost_to_ride and construction_cost to make them useful. We’ll start with ticket_cost_to_ride. It looks like there are semicolons separating what we’ll call cost_types and hyphens separating the ticket_cost_to_ride from the cost_type - let’s break these out.\n\nwheels |> \n  filter(!is.na(ticket_cost_to_ride)) |> \n  select(ticket_cost_to_ride)\n\n                                ticket_cost_to_ride\n1                                               3.5\n2                      Adults – 13; VIP – 110 & 140\n3                                              7.87\n4                                              8.15\n5                        Included in Park Admission\n6                                              6.93\n7                                              8.87\n8                                              6.93\n9                    Adults – 8.17; Children – 4.08\n10                   Adults – 4.94; Children – 2.64\n11               Adults – 13; Children -9; VIP – 50\n12                                    Estimated $38\n13                    Adults – 3.26 Children – 1.63\n14                                             4.94\n15                                               25\n16                                                5\n17                                               28\n18                        Regular – 3.55 VIP – 5.92\n19                  Weekdays – 5.01 Weekends – 6.68\n20                 Adults – 13 Children -9 VIP – 50\n21                                                6\n22                                             ~$35\n23 $10.99+tax for Adults and $6.99+tax for Children\n24        Adults – 7.79 Children – 5.19 VIP – 58.41\n25                                              TBA\n26                                                5\n27                  Adults – 12.92; Children – 6.46\n28             Adults – 13 Children – 8.50 VIP – 50\n29                                              2.6\n30                                             4.97\n31                  Adults – 26.05 Children – 16.58\n32                                             4.97\n33                      Adult – $13.50+tax ($14.45)\n34                                             8.16\n35                                         10 to 15\n36                                            17.94\n37                                              3.5\n38                                             6.97\n39                                                7\n40                  Adults – 27.99 Children – 16.41\n41                                            11.41\n42              Adults – 15 Children – 10 VIP – 119\n43                   Adults – 11.69 Children – 5.19\n44                                                7\n\n\nSo from a quick review - we’ve got a little over half of the data with a non-null ticket_cost_to_ride and the field requires substantial cleaning. In the interest of time, let’s look more closely at the construction_cost field as it is a bit cleaner.\n\nwheels |> \n  count(construction_cost!='Unknown')\n\n  construction_cost != \"Unknown\"  n\n1                          FALSE 40\n2                           TRUE 33\n\n\nHere we’re looking at a situation where a little under half of our data is usable (instead of NA’s, we now have ‘unknown’s. Let’s build up a model of construction costs and see what it’d imply for this ’unknown’ subset.\n\nwheels |> \n  filter(construction_cost!='Unknown') |> \n  select(construction_cost) |> \n  mutate(cons_cost_str_len = stringr::str_length(construction_cost)) |>\n  arrange(desc(cons_cost_str_len))\n\n                             construction_cost cons_cost_str_len\n1  Estimated Between $650 and $750 million USD                43\n2                           $13.18 million USD                18\n3                           $45.67 million USD                18\n4                            $9.89 million USD                17\n5                            $2.42 million USD                17\n6                            $6.68 million USD                17\n7                             $290 million USD                16\n8                             $6.8 million USD                16\n9                             $250 million USD                16\n10                            $113 million USD                16\n11                            $3.2 million USD                16\n12                            $580 million USD                16\n13                            $1.5 million USD                16\n14                            $1.2 million USD                16\n15                            $180 million USD                16\n16                            $1.5 million USD                16\n17                            $300 million USD                16\n18                            $7.3 million USD                16\n19                            $2.2 million USD                16\n20                            $337 million USD                16\n21                            $100 million USD                16\n22                             $13 million USD                15\n23                             $90 million USD                15\n24                             $10 million USD                15\n25                             $12 million USD                15\n26                             $10 million USD                15\n27                             $90 million USD                15\n28                             $20 million USD                15\n29                             $20 million USD                15\n30                             $12 million USD                15\n31                             $10 million USD                15\n32                              $6 million USD                14\n33                              $9 million USD                14\n\n\nOf the 33 usable records, one is given a range. We’ll manually recode that one to a midpoint value (eg, $700M). All values are given in millions of USD, so to make our lives easier we’ll just separate out the numeric bit and multiply by 1e6.\n\nwheels_cons <- wheels |> \n  filter(construction_cost!='Unknown') |> \n  mutate(cons_cost_numeric=\n           ifelse(\n             stringr::str_starts(construction_cost,\n                                 'Estimated Between'),\n             700,\n             NA)) |> \n  tidyr::separate(construction_cost,\n                  into=c('cons_dollars',\n                         'cons_multiplier',\n                         'cons_units'),sep=' ') |> \n  mutate(cons_cost_numeric=\n           ifelse(\n             is.na(cons_cost_numeric),\n             as.numeric(gsub('\\\\$','',cons_dollars)),\n             cons_cost_numeric)) |> \n  select(-one_of(c('cons_dollars','cons_multiplier','cons_units')))\n\nWarning: Expected 3 pieces. Additional pieces discarded in 1 rows [9].\n\n\nWarning in ifelse(is.na(cons_cost_numeric), as.numeric(gsub(\"\\\\$\", \"\",\ncons_dollars)), : NAs introduced by coercion\n\nwheels_cons <- wheels_cons |> \n  mutate(log_cons_cost_numeric = log(cons_cost_numeric))\nggplot(wheels_cons,aes(x=diameter,y=cons_cost_numeric)) + geom_point()\n\nWarning: Removed 19 rows containing missing values (geom_point).\n\n\n\n\n\nWow we have a lot of missing data! Of our 33 available ferris wheels, we see only 14 have an associated diameter. We’ll use recipes to impute some of our continuous variables, and use step_novel and step_unknown to handle missing categorical variables.\nLet’s stick with a simple linear regression for now.\n\nlinear_model <- linear_reg()  |>  set_engine(\"lm\")\n\nwheels_recipe <- \n  recipe(log_cons_cost_numeric ~ height + \n           diameter + \n           seating_capacity + \n           ride_duration_minutes + \n           climate_controlled + \n           vip_area,\n         data = wheels_cons) |> \n  step_novel(all_nominal_predictors()) |> \n  step_unknown(all_nominal_predictors()) |> \n  step_dummy(all_nominal_predictors()) |> \n  step_dummy(all_nominal_predictors()) |> \n  step_impute_mean(all_numeric_predictors())\n\nlm_wflow <- \n  workflow() |>  \n  add_model(linear_model) |> \n  add_recipe(wheels_recipe)\n\nwheels_cons_baked <- wheels_recipe |> \n  prep() |> \n  bake(new_data=NULL)\n\n\nlm_fit <- fit(lm_wflow, wheels_cons)\n\nwheels_cons_res <- predict(lm_fit, \n                           new_data = wheels_cons |> \n                             select(-log_cons_cost_numeric))\n\nWarning in predict.lm(object = object$fit, newdata = new_data, type =\n\"response\"): prediction from a rank-deficient fit may be misleading\n\nwheels_cons <- wheels_cons |> \n  bind_cols(wheels_cons_res) |> \n  mutate(pred_cons_cost = exp(.pred))\n\nggplot(wheels_cons,aes(x=cons_cost_numeric,y=pred_cons_cost)) + \n  geom_point() + \n   coord_trans(\"log2\")\n\n\n\n\nThis looks … pretty bad. Let’s take a quick look at some model evaluation metrics and call it a night.\n\nreg_metrics <- metric_set(rmse, rsq, mae)\nreg_metrics(wheels_cons, \n            truth = cons_cost_numeric, \n            estimate = pred_cons_cost)\n\n# A tibble: 3 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 rmse    standard     104.   \n2 rsq     standard       0.737\n3 mae     standard      45.7  \n\n\nYikes - our RMSE and MAE imply we’re off on average by between $45 and $104 million dollars! We have a pretty high R-squared, but there are about a million reasons why this is a bad metric (and why we might want to trust our model less if our R-squared is high … likely some confounders and excluded variables operating through the ones we’re including).\nOk - wrapping up, last last thing to do is to take a look at the stuff we had to exclude because it was missing the construction_cost variable. How much do we think these guys would cost to build? We’ll just throw this into a graph using height as the x-axis variable because it’s the only numeric variable besides the index with less than 10 missings.\n\nwheels_missing <- \n  wheels |> \n  filter(construction_cost=='Unknown') |> \n  mutate(log_cons_cost_numeric=0, \n         status='Forecasted') \n\nwheels_cons_pred <- predict(lm_fit, \n                           new_data = wheels_missing |> \n                             select(-log_cons_cost_numeric))\n\nWarning in predict.lm(object = object$fit, newdata = new_data, type =\n\"response\"): prediction from a rank-deficient fit may be misleading\n\nwheels_missing <- wheels_missing |>   \n  bind_cols(wheels_cons_pred) |> \n  mutate(pred_cons_cost = exp(.pred)) |> \n  # for viz purposes, set the 'cost' to the prediction\n  mutate(cons_cost_numeric = pred_cons_cost)\n  \nggplot(bind_rows(wheels_missing,\n                 wheels_cons |> mutate(status='Actual')),\n       aes(x=height,y=cons_cost_numeric,color=status)) + geom_point()\n\nWarning: Removed 1 rows containing missing values (geom_point)."
  },
  {
    "objectID": "LICENSE.html",
    "href": "LICENSE.html",
    "title": "Philadelphia R User Group",
    "section": "",
    "text": "Adapted from The Turing Way\nOpenscapes makes all of their materials publicly available under open source licenses.\nThe process documents and data are made available under a CC-BY license. Software are made available under an MIT license.\nThe license text listed below (describing both CC-BY and MIT licenses as well as their usage in Openscapes) is re-used under a CC-BY license from The Carpentries community materials. (Specifically from the Reproducible Science Curriculum).\n\n\nAll documentation and chapter materials in this repository are made available under the Creative Commons Attribution license. The following is a human-readable summary of (and not a substitute for) the full legal text of the CC BY 4.0 license.\nYou are free:\n\nto Share—copy and redistribute the material in any medium or format\nto Adapt—remix, transform, and build upon the material\n\nfor any purpose, even commercially.\nThe licensor cannot revoke these freedoms as long as you follow the license terms.\nUnder the following terms:\n\nAttribution—You must give appropriate credit (mentioning that your work is derived from work that is Copyright © Openscapes and, where practical, linking to https://github.com/openscapes/approach-guide), provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.\nNo additional restrictions—You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.\n\nWith the understanding that:\n\nYou do not have to comply with the license for elements of the material in the public domain or where your use is permitted by an applicable exception or limitation.\nNo warranties are given. The license may not give you all of the permissions necessary for your intended use. For example, other rights such as publicity, privacy, or moral rights may limit how you use the material.\n\n\n\n\nExcept where otherwise noted, the software and infrastructure provided by the The Turing Way Community are made available under the OSI-approved MIT license.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  }
]